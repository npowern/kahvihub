apply plugin: 'application'

sourceCompatibility = 1.7

mainClassName = "fi.helsinki.cs.iot.kahvihub.KahviHub"

dependencies {
	compile project(':core')
	compile project(':native-plugin')
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    compile 'org.json:json:20090211'
    compile 'commons-cli:commons-cli:1.2'
    compile 'commons-codec:commons-codec:1.4'
    runtime 'org.xerial:sqlite-jdbc:3.8.11.2'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

task buildNative(type: Exec, description: 'Compile JNI source files') {
    commandLine 'make',
            '-C', '../jni'
}

task cleanNative(type: Exec, description: 'Clean JNI object files') {
    commandLine 'make',
            '-C', '../jni',
            'clean'
}

clean.dependsOn 'cleanNative'

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn buildNative
}

test {
	beforeTest { descriptor ->
    	logger.lifecycle("Running test: ${descriptor}")
  	}
    jvmArgs = ['-Djava.library.path=../jni']
}

run {
    jvmArgs = ['-Djava.library.path=../jni']
    if(project.hasProperty('conf')){
    	 run.args project.conf.split(',')
    }
}